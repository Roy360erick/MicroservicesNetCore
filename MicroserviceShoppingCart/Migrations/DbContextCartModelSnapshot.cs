// <auto-generated />
using System;
using MicroserviceShoppingCart.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MicroserviceShoppingCart.Migrations
{
    [DbContext(typeof(DbContextCart))]
    partial class DbContextCartModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MicroserviceShoppingCart.Models.SessionCart", b =>
                {
                    b.Property<int>("SessionCartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime");

                    b.HasKey("SessionCartID");

                    b.ToTable("SessionCarts");
                });

            modelBuilder.Entity("MicroserviceShoppingCart.Models.SessionCartDetail", b =>
                {
                    b.Property<int>("SessionCartDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("SelecctedItemID")
                        .HasColumnType("text");

                    b.Property<int>("SessionCartID")
                        .HasColumnType("int");

                    b.HasKey("SessionCartDetailID");

                    b.HasIndex("SessionCartID");

                    b.ToTable("SessionCartDetails");
                });

            modelBuilder.Entity("MicroserviceShoppingCart.Models.SessionCartDetail", b =>
                {
                    b.HasOne("MicroserviceShoppingCart.Models.SessionCart", "SessionCart")
                        .WithMany("SessionCartDetails")
                        .HasForeignKey("SessionCartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
